Features in Detail:
1. Add A New Task: For multi-word tasks, users can use getline() to enter a task.
• Before adding a new task, the application determines whether the task list has reached its maximum size.
2. View Tasks:  A numbered list of all tasks is shown.
• A suitable message is displayed if there are no assignments available.
3. Delete Task: The task number to be deleted must be entered by the user.
• The task number is verified to be within the acceptable range by input validation.
• To fill the space left by the removed task, tasks are moved around in the array.
4. Input Handling: To properly handle line breaks, cin.ignore() clears the input buffer
.• When a task number or menu selection is incorrect, error messages are shown.
Key Advantages:
	•	Easy-to-understand menu-driven interface; robust handling with clear messages for invalid inputs and error scenarios; efficient memory usage with a fixed array size that guarantees minimal resource usage; and educational example: Excellent for novices learning array manipulation and menu-based programming.
Potential Enhancements:
	•	Permit the task list to be dynamically resized using std::vector.• Tasks can be loaded and saved from a file for long-term storage.• Include the option to mark assignments as finished.

This program is a foundational implementation and can be expanded upon as needed!
